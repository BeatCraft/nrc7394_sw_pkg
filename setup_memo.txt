
BC-11AH-ASKEY-RASPI を使用するための
セットアップ手順


UG-7394-018-Raspberry_Pi_setup.pdf
https://github.com/newracom/nrc7394_sw_pkg/blob/master/package/doc/UG-7394-018-Raspberry_Pi_setup.pdf
または
https://github.com/BeatCraft/nrc7394_sw_pkg/blob/master/package/doc/UG-7394-018-Raspberry_Pi_setup.pdf
の記述に従って設定する。


以下の手順は 2024年10月31日現在確認済みのもの


1. Raspberry Pi OS 起動イメージを microSD カードに書き込む

RasPi Imager を使って
Raspberry Pi OS (legacy, 32bit)
2024年10月31日現在の 最新は 
2024-10-22-raspios-bullseye-armhf.img.xz
https://downloads.raspberrypi.com/raspios_oldstable_armhf/images/raspios_oldstable_armhf-2024-10-28/2024-10-22-raspios-bullseye-armhf.img.xz
を microSD カードに書き込み、
RasPi HAT 形式の BC-11AH-ASKEY-RASPI  を装着した Raspberry Pi 4/3 を起動する。

書き込みの際には pi ユーザーを作成しておく必要がある。
（nrc7394_sw_pkg が pi ユーザーを前提して書かれているので。）


Network の設定に dhcpcd を使っていること、iptables がインストールされていることが必要なので
debian Bookworm ベースの Raspberry Pi OS 12 でなく 
debian Bullseye ベースの Raspberry Pi OS 11 を使用する必要がある。
Raspberry Pi OS 12 でも動作できるがその手順は別途記述する。


2. nrc7394_sw_pkg をダウンロードし、設定する。
Raspberry Pi4 を使っている場合、
RasPi Imager で RasPi4 を指定してイメージを書き込むと
userland が 32bit でも kernel は 64bit のものが使われる。
https://forums.raspberrypi.com/viewtopic.php?p=2088935#p2088935

この状態で nrc ドライバーをビルドすると 32bit driver がビルドされ insmod できないので、
/boot/config.txt に arm_64bit=0 を記述して再起動し
32bit kernel で再起動する。

RasPi3 ではこの問題は起こらない。

再起動後 kernel header パッケージをインストールする。
$ sudo apt install raspberrypi-kernel-headers


raspi-config で spi と serial port を有効にし serial console は無効にする。

user mode spi driver を無効にするため nrc7394_sw_pkg 同梱の dts をビルドし配置する。
$ cd nrc7394_sw_pkg-1.2.1/dts/
$ dtc -I dts -O dtb -o newracom.dtbo newracom_for_5.16_or_later.dts
$ sudo cp newracom.dtbo /boot/overlays/
これを反映するため /boot/config.txt に記述する。
同時に内蔵 wifi と blutooth を無効にするための記述も /boot/config.txt に追加する。

dtoverlay=disable-bt
dtoverlay=disable-wifi
dtoverlay=newracom

AP モード動作時に必要な hostapd と dnsmasq をインストールする。
$ sudo apt install hostapd dnsmasq

内蔵 wifi 向けの wpa_supplicant の設定が使われてしまわないようファイル名を変更しておく。
$ cd /etc/wpa_supplicant/
$ sudo mv wpa_supplicant.conf wpa_supplicant.conf.unused

NRC7394 host driver に必要な mac80211 driver が起動時から load されているよう
/etc/modules
に以下を記述
i2c-dev
mac80211

内蔵 wifi が使われてしまわないよう、
/etc/modprobe.d/raspi-blacklist.conf 
に以下を記述
blacklist brcmfmac
blacklist brcmutil


nrc7394_sw_pkg を設定
$ cd nrc7394_sw_pkg-1.2.1/evk/sw_pkg
$ ./update.sh
これで /home/pi に nrc_pkg 一式がコピーされる。

以下のように cli_app と nrc driver をビルドし nrc_pkg 内に配置する。
$ cd /home/pi/nrc7394_sw_pkg-1.2.1/package/src/cli_app/
$ make
$ cp cli_app /home/pi/nrc_pkg/script/
$ cd /home/pi/nrc7394_sw_pkg-1.2.1/package/src/nrc/
$ make
$ cp nrc.ko /home/pi/nrc_pkg/sw/driver/

これで全ての設定とファイルの配置が完了したので
UG-7394-001-EVK User Guide (Host Mode).pdf
https://github.com/newracom/nrc7394_sw_pkg/blob/master/package/doc/UG-7394-001-EVK%20User%20Guide%20(Host%20Mode).pdf
または
https://github.com/BeatCraft/nrc7394_sw_pkg/blob/master/package/doc/UG-7394-001-EVK%20User%20Guide%20(Host%20Mode).pdf
に従って start.py を実行し AP または STA または sniffer として動作










